[init]
	defaultBranch = main

[user]
	email = simon.robin.info@gmail.com
	name = Simon Robin
	login = simrobin
	signingkey = 3838E400A8B01753

[core]
	editor = code --wait
	autocrlf = input
	excludesfile = ~/.gitignore_global
	ignorecase = false

[color]
	ui = true

[diff]
	mnemonicprefix = true
	wordRegex = .

[pull]
	rebase = merges

[push]
	default = current

[fetch]
	prune = true

[commit]
	gpgsign = true

[rebase]
	autosquash = true

[log]
	abbrevCommit = true

[color]
	ui = true

[alias]
	last-tag = ! git describe --tag 2> /dev/null | awk -F "-" '{print $1}'
	remote-repository = ! [[ \"$(git remote get-url --push $(git remote show | head -1))\" =~ ^.*@.*:(.*).git$ ]] && printf '%s' \"${BASH_REMATCH[1]}\"
	changelog = ! git log --no-merges --pretty=format:'%Cred%h%Creset %s' "${2:-HEAD}...${1:-$(git last-tag)}"
	current-branch = rev-parse --abbrev-ref HEAD
	default-branch = ! git remote show origin | grep 'HEAD branch:' | awk '{print $3}'
	default = ! git switch "$(git default-branch)"
	pr = ! [[ \"$(git remote get-url --push $(git remote show | head -1))\" =~ ^.*@(.*):(.*)$ ]] && open \"https://${BASH_REMATCH[1]}/${BASH_REMATCH[2]%.git}/compare/$(git default-branch)...$(git current-branch)?expand=1\"
	fixup = ! git commit --fixup $(git log-pretty "$(git default-branch).." --grep "^fixup" --invert-grep | fzf --height 20 --ansi --reverse | awk '{print $1}')
	frevert = ! git revert $(git log-pretty "$(git default-branch).." --invert-grep | fzf --height 20 --ansi --reverse | awk '{print $1}')
	file-list = ! git ls-files | grep --invert-match package-lock.json | grep --extended-regexp --invert-match '.jpg$|.jpeg$|.png$|.gif$|.ico$|.lock$|.sum$|.jar$|.bat$|.otf$|.woff$|.svg$|.xml$'
	files-commits = ! git log --format=format: --name-only | grep --extended-regexp --invert-match '^$' | sort | uniq -c | sort -rg | head -10
	lines-count = ! git file-list | xargs wc -l 2>/dev/null | tail -1
	authors-commits = ! git log --format=%an | grep --extended-regexp --invert-match '^$' | sort | uniq -c | sort -rg | head -10
	authors-lines = ! git file-list | xargs -n 1 git blame --porcelain 2>/dev/null | grep '^author ' | sed 's|author ||g' | sort | uniq -c | sort -rg | head -10
	aa = add -A
	cc = "! git log --format=format: --name-only | grep -E -v '^$' | sort | uniq -c | sort -rg | head -10"
	cm = commit -m
	co = checkout
	commend = commit --amend --no-edit
	d = diff -w
	df = diff -w
	f = fetch
	fco = "! git switch \"$(git branch -vv --all | fzf --height 20 --ansi -1 --reverse --query=\"remotes/${1:-}\" | awk '{print $1}' | sed 's|^remotes/origin/||')\" #"
	filehistory = log-pretty --
	linehistory = log-pretty -L
	find = log-pretty -S
	lg = log-pretty --graph
	linehistory = log-pretty -L
	log-pretty = log --color --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	oops = commit --amend
	pf = push --force-with-lease
	pur = "! git pushu && git pr"
	pushu = push --set-upstream
	rba = rebase --abort
	rbc = rebase --continue
	rbi = rebase --interactive
	rbm = ! git pull --rebase origin "$(git default-branch)"
	s = status -sb
	st = status -sb
	sweep = ! git prune && git remote prune origin && git branch --list --format '%(if:equals=[gone])%(upstream:track)%(then)%(refname:short)%(end)' | grep --extended-regexp --invert-match '^$' | xargs git branch --delete --force && git gc
	tidy = rebase -i origin/master
	undo = reset --soft HEAD^
	unshallow = ! git remote set-branches origin '*' && git pull --unshallow
	unstage = reset HEAD --
