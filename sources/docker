#!/usr/bin/env bash

if ! command -v docker > /dev/null 2>&1; then
  return
fi

alias dcp='docker-compose'

function dmounts() {
  docker inspect --format='{{range .Mounts}}{{if ne .Driver "local"}}{{.Source}} = {{.Destination}}|{{end}}{{end}}' --type=container ${1} | tr "|" "\n"
}

function denvs() {
  docker inspect --format='{{range $p := .Config.Env}}{{$p}}|{{end}}' --type=container ${1} | tr "|" "\n"
}

function dlinks() {
  docker inspect --format='{{range $p := .HostConfig.Links}}{{$p}}|{{end}}' --type=container ${1} | tr "|" "\n"
}

function dports() {
  docker inspect --format='{{range $p, $conf := .NetworkSettings.Ports}}{{$p}} -> {{(index $conf 0).HostPort}}|{{end}}' --type=container ${1} | tr "|" "\n"
}

function dclean() {
  forceWord=force

  if [ "${#}" -eq 2 ] && [ "${2}" != "${forceWord}" ]; then
    echo Usage: dclean [name prefix] [?force]
    return
  fi

  if [ "${1}" == "${forceWord}" ] || [ "${2}" == "${forceWord}" ]; then
    exclude_containers=""
  else
    exclude_containers=`docker ps -a -q -f label=keep=true 2>/dev/null`
  fi

  if [ ! -z "${1}" ] && [ "${1}" != "${forceWord}" ]; then
    end_containers=`docker ps -a -q -f name=${1} 2>/dev/null`
  else
    end_containers=`docker ps -a -q -f status=exited -f status=created 2>/dev/null`
  fi

  if [ ! -z "${exclude_containers}" ]; then
    end_containers=`echo ${end_containers} | tr " " "\n" | grep -v "${exclude_containers}"`
  fi
  docker rm -f ${end_containers} 2>/dev/null
  docker rmi `docker images --filter dangling=true -q 2>/dev/null` 2>/dev/null
}

function dcheat() {
  read -r -d '' cheatsheet <<'EOF'
# remove all containers and their volumes (running and stopped)
docker rm -vf $(docker ps -aq)
# postgres database
docker run -p 5432:5432 --name some-postgres -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=secret -e POSTGRES_DB=postgres -d postgres:alpine
# mysql database
docker run -p 3306:3306 --name some-mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_USER=mysql -e MYSQL_PASSWORD=secret -e MYSQL_DATABASE=mysql -d mysql
EOF

  echo "$cheatsheet" | grep "$1"
}

