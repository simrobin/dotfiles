#!/usr/bin/env bash

# Preferred 'mv' implementation
alias mv='mv -iv'
# Preferred 'mkdir' implementation
alias mkdir='mkdir -pv'
# Preferred 'less' implementation
alias less='less -FSRXc'
# Go back 1 directory level (for fast typers)
alias cd..='cd ../'
# Go back 1 directory level
alias ..='cd ../'
# Clear terminal display
alias c='clear'
# Find executables
alias which='type -all'
# Echo all executable Paths
alias path='echo -e ${PATH//:/\\n}'
# Display bash options settings
alias show_options='shopt'
# Restore terminal settings when screwed up
alias fix_stty='stty sane'
# Make tab-completion case-insensitive
alias cic='set completion-ignore-case On'

# Shortcut to open selenium browser with vnc
alias selenium-chrome="open vnc://localhost:secret@localhost:5900"
alias selenium-firefox="open vnc://localhost:secret@localhost:5901"

# Makes new Dir and jumps inside
mcd () { mkdir -p "$1" && cd "$1"; }

# Full Recursive Directory Listing
alias lr='ls -R | grep ":$" | sed -e '\''s/:$//'\'' -e '\''s/[^-][^\/]*\//--/g'\'' -e '\''s/^/   /'\'' -e '\''s/-/|/'\'' | less'

# Count of non-hidden files in current dir
alias numFiles='echo $(ls -1 | wc -l)'

# To create a ZIP archive of a folder
zipf () { zip -r "$1".zip "$1" ; }
# Extract most know archives with one command
extract () {
    if [ -f $1 ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}

# Quickly search for file
alias qfind="find . -name "
# Find file under the current directory
ff () { /usr/bin/find . -name "$@" ; }
# Find file whose name starts with a given string
ffs () { /usr/bin/find . -name "$@"'*' ; }
# Find file whose name ends with a given string
ffe () { /usr/bin/find . -name '*'"$@" ; }

# find out the pid of a specified process
findPid () { lsof -t -c "$@" ; }

base64decode () { echo; echo "${1}" | base64 -d; echo; }

if [ `uname` != 'Darwin' ]; then
  return
fi

# Opens current directory in MacOS Finder
alias f='open -a Finder ./'

# Moves a file to the MacOS trash
trash () { command mv "$@" ~/.Trash ; }
# Opens any file in MacOS Quicklook Preview
ql () { qlmanage -p "$*" >& /dev/null; }

# 'Cd's to frontmost window of MacOS Finder
cdf () {
    currFolderPath=$( /usr/bin/osascript <<EOT
        tell application "Finder"
            try
        set currFolder to (folder of the front window as alias)
            on error
        set currFolder to (path to desktop folder as alias)
            end try
            POSIX path of currFolder
        end tell
EOT
    )
    echo "cd to \"$currFolderPath\""
    cd "$currFolderPath"
}

alias finderShowHidden='defaults write com.apple.finder ShowAllFiles TRUE'
alias finderHideHidden='defaults write com.apple.finder ShowAllFiles FALSE'
