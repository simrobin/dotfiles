#!/usr/bin/env bash

if [ `which git 2>/dev/null | wc -l` -lt 1 ]; then
  return
fi

alias g='git'
alias gst='git st'

[ `which __git_complete 2>/dev/null | wc -l` -gt 0 ] && __git_complete g _git

function git_cleanup() {
  git prune
  git branch --merged | egrep -v "(^\*|master)" | xargs git branch -d
}

function git_info() {
  git rev-parse --is-inside-work-tree &>/dev/null || return
  branch=`git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||'`
  dirty=`git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ] && echo -e "*"`

  echo " ("$branch$dirty")"
}

function git_sync() {
  RED='\033[0;31m'
  GREEN='\033[0;32m'
  BLUE='\033[0;34m'
  RESET='\033[0m'

  echo -e "${BLUE}$(date +"%T") Syncing files...${RESET}"

  ssh "${1}" "cd ~/${2}/ && git checkout -- ."

  IFS=$'\n'
  for gitFile in `git status --porcelain`; do
    syncedFile="${gitFile##* }"

    case "${gitFile:0:2}" in
      " M" | "M " | "MM" | "A " | "AM" | "??" | "U " | "R " | "RM")
        rsync -a "${syncedFile}" "${1}:~/${2}/${syncedFile}"
        echo -e "${GREEN} + ${syncedFile}${RESET}"
        ;;

      " D" | "D " | "DM")
        ssh "${1}" "rm ~/${2}/${syncedFile}"
        echo -e "${RED} - ${syncedFile}${RESET}"
        ;;

      *)
        echo -e "${BLUE} ¯\_(ツ)_/¯ Don't know how to handle ${gitFile}${RESET}"
    esac
  done

  echo -e "${BLUE}$(date +"%T") Done!${RESET}"
  echo
}

function watch_sync() {
  echo Usage: watch_sync [REMOTE_SERVER] [REMOTE_PATH_FROM_HOME]

  git_sync "${@}"

  fswatch -0 -o --exclude=.git/ . | while read -d "" event
  do
    git_sync "${@}"
  done
}

function git_checkout() {
  git_browse 'git checkout ${1}'
}

function git_browse() {
  currentWorkDir=`pwd`

  for dir in ${currentWorkDir}/*; do
    cd ${dir}
    if [ `git rev-parse --is-inside-work-tree 2>/dev/null | grep true | wc -l` -eq 1 ]; then
      echo ${dir} && sh -c "$@"
    fi
  done

  cd ${currentWorkDir}
}
