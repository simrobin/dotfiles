#!/usr/bin/env sh

if [ `which git 2>/dev/null | wc -l` -lt 1 ]; then
  return
fi

alias g='git'
alias gst='git st'

[ `which __git_complete 2>/dev/null | wc -l` -gt 0 ] && __git_complete g _git

function git_info() {
  git rev-parse --is-inside-work-tree &>/dev/null || return
  branch=`git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||'`
  dirty=`timeout 1s git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ] && echo -e "*"`

  echo " ("$branch$dirty")"
}

function git_sync() {
  git_browse 'git pull && git push'
}

function git_checkout() {
  git_browse 'git checkout ${1}'
}

function git_browse() {
  currentWorkDir=`pwd`

  for dir in ${currentWorkDir}/*; do
    cd ${dir}
    if [ `git rev-parse --is-inside-work-tree 2>/dev/null | grep true | wc -l` -eq 1 ]; then
      echo ${dir} && sh -c "$@"
    fi
  done

  cd ${currentWorkDir}
}

function gitcommithelp() {
  read -r -d '' cheatsheet <<'EOF'
https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit

<type>(<scope>): <subject>
<BLANK LINE>
<body>
<BLANK LINE>
<footer>

feat: A new feature
fix: A bug fix
docs: Documentation only changes
style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
refactor: A code change that neither fixes a bug nor adds a feature
perf: A code change that improves performance
test: Adding missing or correcting existing tests
chore: Changes to the build process or auxiliary tools and libraries such as documentation generation
EOF

  echo "$cheatsheet"
}
